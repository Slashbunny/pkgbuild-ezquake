--- a/cl_screen.c
+++ b/cl_screen.c
@@ -3370,9 +3370,9 @@ static char *Sshot_SshotDirectory(void) {
 }
 
 #ifdef X11_GAMMA_WORKAROUND
-unsigned short ramps[3][4096];
+extern unsigned short ramps[3][4096];
 #else
-unsigned short  ramps[3][256];
+extern unsigned short ramps[3][256];
 #endif
 
 //applies hwgamma to RGB data
--- a/cl_tent.c
+++ b/cl_tent.c
@@ -29,6 +29,8 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 #include "utils.h"
 #include "qsound.h"
 
+temp_entity_list_t temp_entities;
+
 #define	MAX_BEAMS 32
 typedef struct 
 {
--- a/common_draw.c
+++ b/common_draw.c
@@ -26,6 +26,9 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #include "utils.h"
 #include "Ctrl.h"
 
+// FIXME: this is horrible - points to &hud_gameclock_offset->integer
+int* gameclockoffset;
+
 #if 0
 void Draw_CenterString (int y, char *str)
 {
--- a/common_draw.h
+++ b/common_draw.h
@@ -92,7 +92,7 @@ void HUD_AfterDraw(void);
 
 qbool Draw_BigFontAvailable(void);
 
-int *gameclockoffset;  // hud_gameclock time offset in seconds
+extern int *gameclockoffset;  // hud_gameclock time offset in seconds
 
 void SCR_DrawWadString(int x, int y, float scale, const char *t);
 void SCR_HUD_DrawBar(int direction, int value, float max_value, byte *color, int x, int y, int width, int height);
--- a/protocol.h
+++ b/protocol.h
@@ -465,5 +465,5 @@ typedef struct temp_entity_list_s
 	int				count;
 } temp_entity_list_t;
 
-temp_entity_list_t	temp_entities;
+extern temp_entity_list_t temp_entities;
 
--- a/vfs.h
+++ b/vfs.h
@@ -131,7 +131,7 @@ vfsfile_t *FS_OpenTCP(char *name);
 // GZIP (*.gz) Support
 //=====================
 #ifdef WITH_ZLIB
-searchpathfuncs_t gzipfilefuncs;
+extern searchpathfuncs_t gzipfilefuncs;
 #endif // WITH_ZLIB
 
 //=====================
--- a/vx_stuff.c
+++ b/vx_stuff.c
@@ -27,6 +27,15 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 int GL_LoadTextureImage (char * , char *, int, int, int);
 int coronatexture;
+int gunflashtexture;
+int explosionflashtexture1;
+int explosionflashtexture2;
+int explosionflashtexture3;
+int explosionflashtexture4;
+int explosionflashtexture5;
+int explosionflashtexture6;
+int explosionflashtexture7;
+int ParticleCount, ParticleCountHigh, CoronaCount, CoronaCountHigh, MotionBlurCount, MotionBlurCountHigh;
 
 extern cvar_t gl_bounceparticles;
 
--- a/vx_stuff.h
+++ b/vx_stuff.h
@@ -49,15 +49,15 @@ void InitCoronas(void);
 void InitVXStuff(void);
 void NewStaticLightCorona (coronatype_t type, vec3_t origin, entity_t *serialhint);
 
-int	coronatexture;
-int	gunflashtexture;
-int	explosionflashtexture1;
-int	explosionflashtexture2;
-int	explosionflashtexture3;
-int	explosionflashtexture4;
-int	explosionflashtexture5;
-int	explosionflashtexture6;
-int	explosionflashtexture7;
+extern int	coronatexture;
+extern int	gunflashtexture;
+extern int	explosionflashtexture1;
+extern int	explosionflashtexture2;
+extern int	explosionflashtexture3;
+extern int	explosionflashtexture4;
+extern int	explosionflashtexture5;
+extern int	explosionflashtexture6;
+extern int	explosionflashtexture7;
 
 float CL_TraceLine (vec3_t start, vec3_t end, vec3_t impact, vec3_t normal);
 void WeatherEffect(void);
@@ -126,7 +126,7 @@ extern cvar_t amf_part_trailwidth;
 extern cvar_t amf_part_trailtype;
 
 void SCR_DrawAMFstats(void);
-int ParticleCount, ParticleCountHigh, CoronaCount, CoronaCountHigh, MotionBlurCount, MotionBlurCountHigh;
+extern int ParticleCount, ParticleCountHigh, CoronaCount, CoronaCountHigh, MotionBlurCount, MotionBlurCountHigh;
 void CL_CreateBlurs (vec3_t start, vec3_t end, entity_t *ent);
 void CL_UpdateBlurs (void);
 
